/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

module sum_pipe_Synth(clk, reset_L, dataA, dataB, sum30_dd);
  wire _000_;
  wire [3:0] _001_;
  wire [3:0] _002_;
  wire [3:0] _003_;
  wire [3:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire acarreo_d;
  input clk;
  input [3:0] dataA;
  input [3:0] dataB;
  wire [3:0] data_A_d;
  wire [3:0] data_B_d;
  input reset_L;
  wire [3:0] sum10_d;
  wire [3:0] sum30_d;
  output [3:0] sum30_dd;
  NOT _047_ (
    .A(dataB[3]),
    .Y(_005_)
  );
  NOT _048_ (
    .A(reset_L),
    .Y(_006_)
  );
  NOR _049_ (
    .A(_006_),
    .B(_005_),
    .Y(_002_[3])
  );
  NOT _050_ (
    .A(dataA[2]),
    .Y(_007_)
  );
  NOR _051_ (
    .A(_007_),
    .B(_006_),
    .Y(_001_[2])
  );
  NOT _052_ (
    .A(dataA[3]),
    .Y(_008_)
  );
  NOR _053_ (
    .A(_008_),
    .B(_006_),
    .Y(_001_[3])
  );
  NAND _054_ (
    .A(dataB[0]),
    .B(dataA[0]),
    .Y(_009_)
  );
  NOT _055_ (
    .A(_009_),
    .Y(_010_)
  );
  NOT _056_ (
    .A(dataA[0]),
    .Y(_011_)
  );
  NOT _057_ (
    .A(dataB[0]),
    .Y(_012_)
  );
  NAND _058_ (
    .A(_012_),
    .B(_011_),
    .Y(_013_)
  );
  NAND _059_ (
    .A(_013_),
    .B(reset_L),
    .Y(_014_)
  );
  NOR _060_ (
    .A(_014_),
    .B(_010_),
    .Y(_003_[0])
  );
  NAND _061_ (
    .A(dataB[1]),
    .B(dataA[1]),
    .Y(_015_)
  );
  NOT _062_ (
    .A(dataA[1]),
    .Y(_016_)
  );
  NOT _063_ (
    .A(dataB[1]),
    .Y(_017_)
  );
  NAND _064_ (
    .A(_017_),
    .B(_016_),
    .Y(_018_)
  );
  NAND _065_ (
    .A(_018_),
    .B(_015_),
    .Y(_019_)
  );
  NOR _066_ (
    .A(_019_),
    .B(_009_),
    .Y(_020_)
  );
  NAND _067_ (
    .A(_019_),
    .B(_009_),
    .Y(_021_)
  );
  NAND _068_ (
    .A(_021_),
    .B(reset_L),
    .Y(_022_)
  );
  NOR _069_ (
    .A(_022_),
    .B(_020_),
    .Y(_003_[1])
  );
  NOT _070_ (
    .A(_015_),
    .Y(_023_)
  );
  NOR _071_ (
    .A(_020_),
    .B(_023_),
    .Y(_024_)
  );
  NOR _072_ (
    .A(_024_),
    .B(_006_),
    .Y(_000_)
  );
  NOT _073_ (
    .A(sum10_d[0]),
    .Y(_025_)
  );
  NOR _074_ (
    .A(_025_),
    .B(_006_),
    .Y(_004_[0])
  );
  NOT _075_ (
    .A(sum10_d[1]),
    .Y(_026_)
  );
  NOR _076_ (
    .A(_026_),
    .B(_006_),
    .Y(_004_[1])
  );
  NOT _077_ (
    .A(sum10_d[2]),
    .Y(_027_)
  );
  NAND _078_ (
    .A(data_B_d[2]),
    .B(data_A_d[2]),
    .Y(_028_)
  );
  NOT _079_ (
    .A(data_A_d[2]),
    .Y(_029_)
  );
  NOT _080_ (
    .A(data_B_d[2]),
    .Y(_030_)
  );
  NAND _081_ (
    .A(_030_),
    .B(_029_),
    .Y(_031_)
  );
  NAND _082_ (
    .A(_031_),
    .B(_028_),
    .Y(_032_)
  );
  NOR _083_ (
    .A(_032_),
    .B(_027_),
    .Y(_033_)
  );
  NAND _084_ (
    .A(_032_),
    .B(_027_),
    .Y(_034_)
  );
  NAND _085_ (
    .A(_034_),
    .B(reset_L),
    .Y(_035_)
  );
  NOR _086_ (
    .A(_035_),
    .B(_033_),
    .Y(_004_[2])
  );
  NOT _087_ (
    .A(_028_),
    .Y(_036_)
  );
  NOR _088_ (
    .A(_033_),
    .B(_036_),
    .Y(_037_)
  );
  NOT _089_ (
    .A(data_A_d[3]),
    .Y(_038_)
  );
  NOR _090_ (
    .A(data_B_d[3]),
    .B(_038_),
    .Y(_039_)
  );
  NOT _091_ (
    .A(data_B_d[3]),
    .Y(_040_)
  );
  NOR _092_ (
    .A(_040_),
    .B(data_A_d[3]),
    .Y(_041_)
  );
  NOR _093_ (
    .A(_041_),
    .B(_039_),
    .Y(_042_)
  );
  NOR _094_ (
    .A(_042_),
    .B(_037_),
    .Y(_043_)
  );
  NAND _095_ (
    .A(_042_),
    .B(_037_),
    .Y(_044_)
  );
  NAND _096_ (
    .A(_044_),
    .B(reset_L),
    .Y(_045_)
  );
  NOR _097_ (
    .A(_045_),
    .B(_043_),
    .Y(_004_[3])
  );
  NOT _098_ (
    .A(dataB[2]),
    .Y(_046_)
  );
  NOR _099_ (
    .A(_046_),
    .B(_006_),
    .Y(_002_[2])
  );
  DFF _100_ (
    .C(clk),
    .D(_004_[0]),
    .Q(sum30_dd[0])
  );
  DFF _101_ (
    .C(clk),
    .D(_004_[1]),
    .Q(sum30_dd[1])
  );
  DFF _102_ (
    .C(clk),
    .D(_004_[2]),
    .Q(sum30_dd[2])
  );
  DFF _103_ (
    .C(clk),
    .D(_004_[3]),
    .Q(sum30_dd[3])
  );
  DFF _104_ (
    .C(clk),
    .D(_003_[0]),
    .Q(sum10_d[0])
  );
  DFF _105_ (
    .C(clk),
    .D(_003_[1]),
    .Q(sum10_d[1])
  );
  DFF _106_ (
    .C(clk),
    .D(_000_),
    .Q(sum10_d[2])
  );
  DFF _107_ (
    .C(clk),
    .D(_001_[2]),
    .Q(data_A_d[2])
  );
  DFF _108_ (
    .C(clk),
    .D(_001_[3]),
    .Q(data_A_d[3])
  );
  DFF _109_ (
    .C(clk),
    .D(_002_[2]),
    .Q(data_B_d[2])
  );
  DFF _110_ (
    .C(clk),
    .D(_002_[3]),
    .Q(data_B_d[3])
  );
  assign acarreo_d = sum10_d[2];
  assign sum10_d[3] = 1'b0;
  assign sum30_d[1:0] = sum10_d[1:0];
endmodule

module sumador_Synth(clk, reset_L, idx, dataA, dataB, sum30_dd, idx_dd);
  input clk;
  input [3:0] dataA;
  input [3:0] dataB;
  input [3:0] idx;
  wire [3:0] idx_d;
  output [3:0] idx_dd;
  input reset_L;
  output [3:0] sum30_dd;
  wire [3:0] sum30_dd_in;
  DFF _0_ (
    .C(clk),
    .D(idx_d[0]),
    .Q(idx_dd[0])
  );
  DFF _1_ (
    .C(clk),
    .D(idx_d[1]),
    .Q(idx_dd[1])
  );
  DFF _2_ (
    .C(clk),
    .D(idx_d[2]),
    .Q(idx_dd[2])
  );
  DFF _3_ (
    .C(clk),
    .D(idx_d[3]),
    .Q(idx_dd[3])
  );
  DFF _4_ (
    .C(clk),
    .D(idx[0]),
    .Q(idx_d[0])
  );
  DFF _5_ (
    .C(clk),
    .D(idx[1]),
    .Q(idx_d[1])
  );
  DFF _6_ (
    .C(clk),
    .D(idx[2]),
    .Q(idx_d[2])
  );
  DFF _7_ (
    .C(clk),
    .D(idx[3]),
    .Q(idx_d[3])
  );
  sum_pipe_Synth pipeline (
    .clk(clk),
    .dataA(dataA),
    .dataB(dataB),
    .reset_L(reset_L),
    .sum30_dd(sum30_dd_in)
  );
  assign sum30_dd = sum30_dd_in;
endmodule
